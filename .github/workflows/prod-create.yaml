on:
  push:
    tags:
      - v**



name: Deploy production environment

jobs:
  build-image:
    name: Build production image
    runs-on: ubuntu-latest
    environment: production
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          build-args: DATABASE_URL=${{ secrets.DATABASE_URL }}
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.APP_IMAGE }}:${{ github.ref_name }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  deploy-dev:
    name: Deploy PROD
    runs-on: ubuntu-latest
    environment: production
    needs: [build-image]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install jinja2
      - run: python main.py base_deployment_prod.yaml > parsed_manifest.yaml
      - run: cat parsed_manifest.yaml
      - name: Destroy old deployment
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: delete -f parsed_manifest.yaml --ignore-not-found
      - name: Create new deployment
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f parsed_manifest.yaml
    env:
      ENV_DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ENV_REVENIU_API_HOST: ${{ secrets.REVENIU_API_HOST }}
      ENV_REVENIU_HOST: ${{ secrets.REVENIU_HOST }}
      ENV_REVENIU_API_KEY: ${{ secrets.REVENIU_API_KEY }}
      ENV_RUST_LOG: ${{ vars.RUST_LOG }}
      ENV_SENTRY_ENVIRONMENT: ${{ vars.SENTRY_ENVIRONMENT}}
      APP_TAG: ${{ github.ref_name }}
      APP_NAMESPACE: ${{ vars.APP_NAMESPACE }}
      APP_IMAGE: ${{ vars.APP_IMAGE }}
      APP_NAME: ${{ vars.APP_NAME}}
      APP_INGRESS_PATH: ${{ vars.APP_INGRESS_PATH}}
